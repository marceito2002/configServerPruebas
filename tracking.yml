# HTTP Server
server:  
  port: 8080   # HTTP port


logging:
  file: logs/${spring.application.name}.log
  pattern:
    console: "%d %-5level %logger{5} %M : %msg%n"
    file: "%d %-5level %logger{5} %M : %msg%n"
  level:
    com.netflix.discovery: 'OFF'
    org.springframework.cloud: 'INFO'
    org.springframework.web: 'INFO'
    com.docomo.fraudwall: 'INFO' 
    org.springframework.kafka: 'INFO'
          

endpoints:
  health:
    sensitive: false
  restart:
    enabled: true
  shutdown:
    enabled: true

msg:
  partnerNameNoExist: Error token generated. partnerId not exist. 
  ssesionSuccess: Token generated Successfully

spring:  
  application:    
    name: tracking
  profiles:
    active: ${SPRING_PROFILES_ACTIVE}    

---
spring:
  profiles: local
  data:
    mongodb:
      host: localhost
      port: 27017
      database: fraudwall
      
kafka:
  bootstrap-servers: localhost
  port: ${PORT_KAFKA_PRODUCER}
  topic: FRAUD-WALL-NEW
  
--- 
spring:
  profiles: openshift
  data:
    mongodb:            
      host: mongodb
      #port: 27017
      database: fraudwall  
      username: alf
      password: alf    

kafka:
  bootstrap-servers: kafka
  topic: FRAUD-WALL-NEW
  port: ${PORT_KAFKA_PRODUCER}    
--- 
spring:
  profiles: docker
  data:
    mongodb:            
      host: mongodb
 
kafka:
  bootstrap-servers: kafka
  topic: FRAUD-WALL-NEW
  port: ${PORT_KAFKA_PRODUCER}    

  
  